---
import Layout from '../layouts/Layout.astro';
import '../assets/css/login.css';
---

<Layout title="Login">
  <div class="login-root">
    <div class="box-root flex-flex flex-direction--column" style="min-height: 100vh;flex-grow: 1;">
      <div class="loginbackground box-background--white padding-top--64">
        <div class="loginbackground-gridContainer">
          <div class="box-root flex-flex" style="grid-area: top / start / 8 / end;">
            <div class="box-root"
              style="background-image: linear-gradient(white 0%, rgb(247, 250, 252) 33%); flex-grow: 1;">
            </div>
          </div>
          <div class="box-root flex-flex" style="grid-area: 4 / 2 / auto / 5;">
            <div class="box-root box-divider--light-all-2 animationLeftRight tans3s" style="flex-grow: 1;"></div>
          </div>
          <div class="box-root flex-flex" style="grid-area: 6 / start / auto / 2;">
            <div class="box-root box-background--blue800" style="flex-grow: 1;"></div>
          </div>
          <div class="box-root flex-flex" style="grid-area: 7 / start / auto / 4;">
            <div class="box-root box-background--blue animationLeftRight" style="flex-grow: 1;"></div>
          </div>
          <div class="box-root flex-flex" style="grid-area: 8 / 4 / auto / 6;">
            <div class="box-root box-background--gray100 animationLeftRight tans3s" style="flex-grow: 1;"></div>
          </div>
          <div class="box-root flex-flex" style="grid-area: 2 / 15 / auto / end;">
            <div class="box-root box-background--cyan200 animationRightLeft tans4s" style="flex-grow: 1;"></div>
          </div>
          <div class="box-root flex-flex" style="grid-area: 3 / 14 / auto / end;">
            <div class="box-root box-background--blue animationRightLeft" style="flex-grow: 1;"></div>
          </div>
          <div class="box-root flex-flex" style="grid-area: 4 / 17 / auto / 20;">
            <div class="box-root box-background--gray100 animationRightLeft tans4s" style="flex-grow: 1;"></div>
          </div>
          <div class="box-root flex-flex" style="grid-area: 5 / 14 / auto / 17;">
            <div class="box-root box-divider--light-all-2 animationRightLeft tans3s" style="flex-grow: 1;"></div>
          </div>
        </div>
      </div>
      <div class="box-root padding-top--24 flex-flex flex-direction--column" style="flex-grow: 1; z-index: 9;">
        <div class="box-root padding-top--48 padding-bottom--24 flex-flex flex-justifyContent--center">
          <h1><a href="/" rel="dofollow"></a></h1>
        </div>
        <div class="formbg-outer">
          <div class="formbg">
            <div class="formbg-inner padding-horizontal--48">
              <span class="padding-bottom--15">Iniciar Sesion</span>
              <form id="login-form" class="padding-bottom--24">
                <div class="field padding-bottom--24">
                  <label for="email">Email</label>
                  <input type="email" id="email" name="email" required>
                </div>
                <div class="field padding-bottom--24">
                  <div class="grid--50-50">
                    <label for="password">Password</label>
                    <div class="reset-pass">
                      <a href="/forgot">Forgot your password?</a>
                    </div>
                  </div>
                  <input type="password" id="password" name="password" required>
                </div>
                <div class="field padding-bottom--24">
                  <button type="submit" class="btn">Login</button>
                </div>
              </form>
              <div class="links">
                No tienes cuenta? <a href="/registro">Registrate ahora</a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11" crossorigin="anonymous"></script>

  <script>
    // Accede a la variable inyectada por Astro
    const apiUrl = import.meta.env.PUBLIC_API_URL;
    window.API_URL = apiUrl;
  </script>
  
  <script is:inline>
    // Función para verificar sesión
    async function checkSession() {
  try {
    const response = await fetch(`${window.API_URL}/api/check-session`, {
      method: 'GET',
      credentials: 'include',
      headers: {
        'Content-Type': 'application/json'
      }
    });

    if (!response.ok) {
      throw new Error('Error en la verificación de sesión');
    }

    const data = await response.json();
    
    if (data.isLoggedIn) {
      // Guardar datos mínimos en sessionStorage
      sessionStorage.setItem('isAuthenticated', 'true');
      sessionStorage.setItem('userId', data.userId);
      
      // Redirigir solo si estamos en la página de login
      if (window.location.pathname === '/login') {
        window.location.href = '/dashboard';
      }
    } else {
      // Limpiar datos de sesión si no está autenticado
      sessionStorage.removeItem('isAuthenticated');
      sessionStorage.removeItem('userId');
    }
  } catch (error) {
    console.error('Error verificando sesión:', error);
    sessionStorage.clear();
  }
}

// Verificar sesión al cargar
document.addEventListener('DOMContentLoaded', checkSession);

// Manejar login
document.getElementById('login-form').addEventListener('submit', async (e) => {
  e.preventDefault();
  
  const email = document.getElementById('email').value.trim();
  const password = document.getElementById('password').value;

  if (!email || !password) {
    return Swal.fire({
      icon: "error",
      title: "Error!",
      text: "Email y contraseña son requeridos",
      confirmButtonColor: "#000000",
    });
  }

  try {
    const response = await fetch(`${window.API_URL}/api/auth/login`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        email: document.getElementById('email').value,
        password: document.getElementById('password').value
      }),
      credentials: 'include'
    });

    const data = await response.json();

    if (!response.ok) throw new Error(data.message || 'Error en login');

    // Guardar solo datos no sensibles
    sessionStorage.setItem('userData', JSON.stringify(data.user));
    window.location.href = '/dashboard';

  } catch (error) {
    Swal.fire({
      icon: "error",
      title: "Error!",
      text: error.message || "Error al iniciar sesión",
      confirmButtonColor: "#000000",
    });
  }
});
  </script>
</Layout>